<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.cuteluobo.mapper.CommandLimitMapper">
  <resultMap id="BaseResultMap" type="com.github.cuteluobo.model.CommandLimit">
    <!--@mbg.generated-->
    <!--@Table command_limit-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="primary" jdbcType="LONGVARCHAR" property="primary" />
    <result column="cycle_num" jdbcType="INTEGER" property="cycleNum" />
    <result column="cycle_second" jdbcType="INTEGER" property="cycleSecond" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, group_id, user_id, "primary", cycle_num, cycle_second, "state"
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from command_limit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from command_limit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.github.cuteluobo.model.CommandLimit" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into command_limit (group_id, user_id, "primary", 
      cycle_num, cycle_second, "state"
      )
    values (#{groupId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{primary,jdbcType=LONGVARCHAR}, 
      #{cycleNum,jdbcType=INTEGER}, #{cycleSecond,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.github.cuteluobo.model.CommandLimit" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into command_limit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        group_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="primary != null">
        "primary",
      </if>
      <if test="cycleNum != null">
        cycle_num,
      </if>
      <if test="cycleSecond != null">
        cycle_second,
      </if>
      <if test="state != null">
        "state",
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="primary != null">
        #{primary,jdbcType=LONGVARCHAR},
      </if>
      <if test="cycleNum != null">
        #{cycleNum,jdbcType=INTEGER},
      </if>
      <if test="cycleSecond != null">
        #{cycleSecond,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.cuteluobo.model.CommandLimit">
    <!--@mbg.generated-->
    update command_limit
    <set>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="primary != null">
        "primary" = #{primary,jdbcType=LONGVARCHAR},
      </if>
      <if test="cycleNum != null">
        cycle_num = #{cycleNum,jdbcType=INTEGER},
      </if>
      <if test="cycleSecond != null">
        cycle_second = #{cycleSecond,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        "state" = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.cuteluobo.model.CommandLimit">
    <!--@mbg.generated-->
    update command_limit
    set group_id = #{groupId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      "primary" = #{primary,jdbcType=LONGVARCHAR},
      cycle_num = #{cycleNum,jdbcType=INTEGER},
      cycle_second = #{cycleSecond,jdbcType=INTEGER},
      "state" = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>